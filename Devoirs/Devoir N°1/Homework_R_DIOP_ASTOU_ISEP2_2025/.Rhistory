library(dplyr)
packages <- c("dplyr", "magrittr")
for (pkg in packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg)  # Installation si absent
library(pkg, character.only = TRUE)  # Chargement
} else {
library(pkg, character.only = TRUE)  # Chargement direct si déjà installé
}
}
install.packages(dplyr)  # Installation
library(dplyr)
library(magrittr)  # Pour utiliser l'opérateur pipe %>%
install.packages(magrittr)  # Installation
detach("package:dplyr", unload = TRUE)
library(dplyr)
detach("package:dplyr", unload = TRUE)
install.packages(dplyr)  # Installation
library(dplyr)
library(dplyr)
set.seed(123) # Assurer la reproductibilité des résultats
df <- data.frame(
id = 1:30,  # Identifiant unique
nom = sample(LETTERS, 30, replace = TRUE),  # Chaîne de caractères (string)
age = sample(18:65, 30, replace = TRUE),  # Numérique (entier)
salaire = round(runif(30, 1500, 5000), 2),  # Numérique (salaire aléatoire)
genre = factor(sample(c("Homme", "Femme"), 30, replace = TRUE)),  # Facteur
groupe = factor(sample(LETTERS[1:3], 30, replace = TRUE)),  # Facteur (catégorie A, B, C)
score = sample(1:100, 30, replace = TRUE),  # Numérique (score sur 100)
actif = sample(c(TRUE, FALSE), 30, replace = TRUE),  # Booléen
niveau = factor(sample(c("Bac", "Licence", "Master"), 30, replace = TRUE)),  # Facteur
evaluation = rnorm(30, mean = 10, sd = 2)  # Numérique (notation aléatoire)
)
print(head(df, 10))  # Aperçu du dataframe
df$salaire_apres_impot <- df$salaire * 0.75  # Réduction de 25% d'impôt
df$bonus <- df$score / 10  # Score divisé par 10
df$revenu_total <- df$salaire + df$bonus  # Salaire + bonus
df$est_riche <- df$salaire > 4000  # Indique si le salaire est > 4000
df$score_faible <- df$score < 50  # Score inférieur à 50 ?
